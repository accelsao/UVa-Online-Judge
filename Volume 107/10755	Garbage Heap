#include<iostream>
#include<algorithm>
#include<map>
#include<string>
#include<cstdio>
#include<queue>
#include<cmath>
#include<stack>
#include<sstream>
using namespace std;


int t;
long long p[21][21][21] = {};
int a, b, c;

long long max1D(long long m[]){
	long long ans = -1e11;
	long long s=0;
	for (int i = 1; i <= c; i++){
		if (s >= 0)s += m[i];
		else s = m[i];
			ans = max(ans, s);
		}
	return ans;
}
long long max2D(long long m[][21]){
	long long ans = -1e11;
	for (int i = 1; i <= b; i++){
		long long s[21] = {};
		for (int j = i; j <= b; j++){
			for (int k = 1; k <= c; k++)
				s[k] += m[j][k];
			ans = max(ans, max1D(s));
		}
	}
	return ans;
}

long long max3D(long long m[][21][21]){
	long long ans = -1e11;
	for (int i = 1; i <= a; i++){
		long long s[21][21] = {};
		for (int j = i; j <= a; j++){
			for (int k = 1; k <= b; k++)
				for (int l = 1; l <= c; l++)
					s[k][l] += m[j][k][l];
			ans = max(ans, max2D(s));
		}
	}
	return ans;
}

int main(){
	cin >> t;
	while (t--){
		cin >> a >> b >> c;
		for (int i = 1; i <= a; i++)
			for (int j = 1; j <= b; j++)
				for (int k = 1; k <= c; k++)
					cin >> p[i][j][k];
		
		cout << max3D(p) << endl;
		if(t)cout << endl;
	}
}
// Maximum Sum Submatrix 3ç¶­
