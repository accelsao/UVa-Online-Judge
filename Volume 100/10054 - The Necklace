#include<iostream>
#include<cmath>
#include<algorithm>
#include<cstring>
#include<cstdio>
#include<queue>
#include<string>
#include<map>
#include<set>
#include<string>
#include<sstream>
#include<vector>
#include<functional>
#include<unordered_map>
using namespace std;

vector<pair<int,int>>g[51];
int d[51], v[1001];
void dfs(int x){
	for (int i = 0; i < g[x].size();i++)
		if (!v[g[x][i].second]){
			v[g[x][i].second] = 1;
			dfs(g[x][i].first);
			printf("%d %d\n",  g[x][i].first,x);
		}
}
int main(){
	ios::sync_with_stdio(0), cin.tie(0);
	int t;
	cin >> t;
	for (int i = 1; i <= t;i++){
		if (i != 1)puts("");
		int n;
		cin >> n;
		int x, y;
		for (int i = 0; i < 51; i++)
			g[i].clear(), d[i] = 0;
		for (int i = 0; i < 1001; i++)
			v[i] = 0;
		int s;
		for (int i = 0; i < n;i++){
			cin >> x >> y;
			g[x].push_back(make_pair(y, i));
			g[y].push_back(make_pair(x, i));
			d[x]++, d[y]++;
			if(!i)s = x;
		}
		printf("Case #%d\n", i);
		int odd = 1;
		for (int i = 0; i < 51; i++)
			odd &= !(g[i].size() & 1);
		if (!odd)puts("some beads may be lost");
		else
			dfs(s);	
	}
}
