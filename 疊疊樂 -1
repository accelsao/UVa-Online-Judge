#include<iostream>
#include<cmath>
#include<algorithm>
#include<cstring>
#include<cstdio>
#include<cstdlib>
#include<string>
#include<vector>
using namespace std;

struct box{
	int w, s;
	int h;
}p[100000];

bool cmp(box a, box b){
	return a.s-a.w > b.s-b.w;
}
int dp[100005] = {};
int pos[100005] = {};
int main(){
	FILE *stream;
	//freopen_s(&stream,"c24701.in.txt", "r", stdin);
	//freopen_s(&stream,"c247001.out.txt", "w", stdout);
	int n = 1;
	//int seed = 0;
	//srand(seed);
	while (cin >>p[n].w>>p[n].s>>p[n].h,p[n].w)
		n++;
	//n = 100;
	/*for (int i = 1; i < n; i++){
		srand(i);
		p[n].w = rand() * 10 % 100000 + 1;
		p[n].s = rand() * 10 % 100000 + 1;
		p[n].h = rand() % 10 + 1;
		printf("%d %d %d\n", p[n].w, p[n].s, p[n].h);
	}*/
	
	sort(p + 1, p + n, cmp);
	for (int i = 1; i < n; ++i)
		dp[i] = 0;
	dp[0] = 1e9;
	//dp 負重
	int Max = 0;
	p[0].h =pos[0]= 1e9;
	for (int i = 1; i < n; ++i)
		for (int j = Max + 1; j >= 1; --j)
			if (dp[j - 1]>=p[i].w&&p[i].h<=pos[j-1]){
				//Max = max(Max, j);//當前要新增的位置
				Max = max(Max, j);//當前要新增的位置
				int k = min(dp[j - 1] - p[i].w, p[i].s - p[i].w);
				if (dp[j] < k){
					dp[j] = k;	
					pos[j] = p[i].h;

				}
				//max(原負重,min(負重-新加的物重=新的負重,新加的物的負重))//加的物負重可能更小
			}
	printf("%d\n", Max);
	int L = pos[1] * 2 - 1;//pos[] max 10
	for (int i = Max; i >= 1; i--){
		int cc = (L - (pos[i]*2-1)) / 2;
		while (cc--)putchar(' ');
		for (int j = 0; j < pos[i]; j++){
			if (j)putchar(' ');
			putchar('*');
		}
		cc = (L - (pos[i] * 2 - 1)) / 2;
		while (cc--)putchar(' ');
		puts("");

	}
	//fclose(stdin);
	//fclose(stdout);
}
