#include<string>
#include<cstdio>
#include<iostream>
#include<queue>
#include<cmath>
#include<stack>
#include<cctype>
#include<cstring>
#include<sstream>
#include<set>
#include<map>
#include<algorithm>
#include<functional>
#include <regex>
#include<cassert>
using namespace std;


int n, m;
int c[10] = { 6, 2, 5, 5, 4, 5, 6, 3, 7, 6 };
int dp[101][3001];//位數
int p[101][3001];//最大數
int main(){
	int t = 1;
	while (cin >> n, n){
		cin >> m;
		printf("Case %d: ", t++);
		//i 需要的火柴數 除以m餘數為j
		for (int i = 0; i <= n; i++)
			for (int j = 0; j < m; j++){
				int &ans = dp[i][j];
				ans = p[i][j] = -1;
				if (!j)ans = 0;
				for (int d = 9; d >= 0;d--)
					if (i >= c[d]){
						int t = dp[i - c[d]][(j * 10 + d) % m];
						if (t >= 0 && t + 1 > ans){
							ans = t + 1;
							p[i][j] = d;
						}
					}
			}
		if (p[n][0] < 0)printf("-1");
		else{
			int i = n, j = 0;
			for (int d = p[i][j]; d >= 0; d = p[i][j]){
				printf("%d", d);
				i -= c[d];
				j = (j * 10 + d) % m;
			}
		}
		puts("");
	}
}12105 - Bigger is Better
