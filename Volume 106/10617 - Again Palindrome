#include<iostream>
#include<algorithm>
#include<map>
#include<string>
#include<cstdio>
#include<queue>
#include<cmath>
#include<stack>
#include<cctype>
#include<sstream>
using namespace std;

string s;
long long dp[61][61];	//dp 是回文字串的數量

long long find(long long i,long long j){
	if (i > j||i<0||j>=s.size())return 0;
	if (dp[i][j] != -1)return dp[i][j];
	if (s[i] == s[j])//去掉左邊一個 的方法數find(i + 1, j)+去掉右邊find(i, j - 1)-重複find(i+1, j - 1)+兩邊都不扣掉find(i+1, j - 1)+1
		return dp[i][j] = find(i + 1, j) + find(i, j - 1) + 1;
	return dp[i][j] = find(i + 1, j) + find(i, j - 1) - find(i + 1, j - 1);
}

int main(){
	int t;
	cin >> t;
	while (t--){
		cin >> s;
		for (int i = 0; i < s.size(); i++)
			for (int j = 0; j < s.size(); j++)
				if (i>j)dp[i][j] = 0;
				else if (i == j)dp[i][j] = 1;
				else
					dp[i][j] = -1;
				cout << find(0, s.size() - 1) << endl;
	}
}
