#include<iostream>
#include<cmath>
#include<algorithm>
#include<cstring>
#include<cstdio>
#include<queue>
#include<string>
#include<map>
#include<set>
#include<string>
#include<sstream>
#include<vector>
#include<functional>
#include<unordered_map>
using namespace std;

int n, m;
struct edge{
	int fr ,to, d;
};
edge w[2001];
int d[1001];
void bell(){
	for (int i = 1; i < n; i++)
		d[i] = 1e9;
	d[0] = 0;
	for (int i = 0; i < n - 1; i++)
		for (int i = 0; i < m; i++)
			if (d[w[i].fr] + w[i].d < d[w[i].to])
				d[w[i].to] = d[w[i].fr] + w[i].d;
}
bool neg(){
	for (int i = 0; i < m; i++)
		if (d[w[i].fr] + w[i].d < d[w[i].to])
			return 1;
	return 0;
}
int main(){
	int t;
	cin >> t;
	while (t--){
		cin >> n >> m;
		int a, b, c;
		for (int i = 0; i < m; i++)
			cin >> w[i].fr >> w[i].to >> w[i].d;	
		bell();
		if (!neg())
			puts("not possible");
		else
			puts("possible");
	}
}
