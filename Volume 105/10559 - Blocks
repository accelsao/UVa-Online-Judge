#include<string>
#include<cstdio>
#include<iostream>
#include<queue>
#include<cmath>
#include<stack>
#include<cctype>
#include<cstring>
#include<sstream>
#include<set>
#include<map>
#include<algorithm>
#include<functional>
#include <regex>
#include<cassert>
using namespace std;


#define N 201

int A[N];
int d[N][N][N];
int dp(int i, int j, int k){
	if (i > j)return 0;
	int &ans = d[i][j][k];
	if (ans != -1)return ans;
	int p = j;
	while (p>=i&&A[p - 1] == A[j])p--;
	ans = dp(i, p - 1, 0) + (j - (p - 1) + k)*(j - (p - 1) + k);//右邊j 左點p +右邊k長度
	for (int q = i; q < p; q++)
		if (A[q] == A[j] && A[q] != A[q + 1])//
			ans = max(ans, dp(q + 1, p - 1, 0) + dp(i, q, j - (p-1) + k));
	return ans;
}
int main(){
	int t;
	cin >> t;
	for (int k = 1; k <= t; k++){
		int n;
		cin >> n;
		for (int i = 0; i < n; i++)
			cin >> A[i];
		for (int i = 0; i <= n; i++)
			for (int j = 0; j <= n; j++)
				for (int k = 0; k <= n; k++)
					d[i][j][k] = -1;
		printf("Case %d: %d\n", k, dp(0, n - 1, 0));
	}
}
