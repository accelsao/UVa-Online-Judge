#include<iostream>
#include<cmath>
#include<algorithm>
#include<cstring>
#include<cstdio>
#include<queue>
#include<string>
#include<map>
#include<set>
#include<string>
#include<sstream>
#include<vector>
#include<functional>
#include<unordered_map>
using namespace std;




struct road{
	int x, y;
	int c;
};
int p[101];
int n, m;
bool cmp(road a,road b){
	return a.c > b.c;
}
int find(int x){
	return p[x] == x ? x : p[x] = find(p[x]);
}
vector<road>v;
int k(){
	int ans = 0;
	sort(v.begin(), v.end(), cmp);
	int e = 0;
	for (int i = 0; i < v.size() && e < n - 1; i++){
		int x, y;
		while ((x = find(v[i].x)) == (y = find(v[i].y)))i++;
		
		p[x] = y;
		e++;
		ans = v[i].c;
	}
	return ans;
}

int main(){
	int t;
	cin >> t;
	for (int i = 1; i <= t;i++){
		v.clear();
		cin >> n >> m;
		int a, b, c;
		for (int i = 0; i < m; i++){
			cin >> a >> b >> c;
			v.push_back(road{ a, b, c });
		}
		for (int i = 0; i < n; i++)
			p[i] = i;
		printf("Case #%d: %d\n", i, k());
	}
}
