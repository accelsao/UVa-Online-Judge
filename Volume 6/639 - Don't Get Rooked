#include<iostream>
#include<algorithm>
#include<map>
#include<string>
#include<cstdio>
#include<queue>
using namespace std;


char m[4][4];
int  p[4][4] = {};//0=可過 1=不能過 2=X
int n;
int ans;
bool check(int x,int y){
	if (p[x][y])return 0;
	for (int i = x - 1; i >= 0; i--){
		if (p[i][y] == 2)break;
		else if (p[i][y])return 0;
	}
	for (int i = x + 1; i < n; i++){
		if (p[i][y] == 2)break;
		else if (p[i][y])return 0;
	}
	for (int i = y - 1; i >= 0; i--){
		if (p[x][i] == 2)break;
		else if (p[x][i])return 0;
	}
	for (int i = y + 1; i <n; i++){
		if (p[x][i] == 2)break;
		else if (p[x][i])return 0;
	}
	return 1;
}
void bt(int x, int y,int num){
	ans = max(ans, num);
	for (int i = x; i < n; i++){
		
		for (int j = y+1; j < n; j++){
			if (check(i, j)){
				p[i][j] = 1;
				bt(i, j, num + 1);
				p[i][j] = 0;
				bt(i, j, num);

			}
		}
		y = -1;
	}
}
int main(){
	while (cin >> n,n){
		ans = 0;
		for (int i = 0; i < n; i++)
			for (int j = 0; j < n; j++){
				cin >> m[i][j];
				if (m[i][j]=='X')
				p[i][j] = 2;
				else p[i][j] = 0;
			}
		for (int i = 0; i < n; i++)
			for (int j = 0; j < n; j++)
				if (!p[i][j]){
					p[i][j] = 1;
					bt(i, j,1);
					p[i][j] = 0;
					bt(i, j, 0);
					
				}
			
		cout << ans << endl;
	}

}
